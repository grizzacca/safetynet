version: "3.7"
services:
  redis:
    build:
      context: infra/redis
    image: "safetynet-redis:5.0.7"
    networks:
      - safetynet
    # Increases the size of the backlog for maximum outstanding connections
    sysctls:
      - net.core.somaxconn=1024
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 256M
  app:
    build:
      context: app
    image: "safetynet-app:1.0.0"
    environment:
      - FLASK_APP=/safetynet/app
      - FLASK_ENV=development
      - API_VERSION=1
      - BACKEND_HOST=safetynet_redis_1
      - BACKEND_PORT=6379
    # Doesn't wait for Redis to be fully configured before starting the app
    depends_on:
      - redis
    networks:
      - safetynet
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 256M
  nginx:
    build:
      context: infra/nginx
    image: "safetynet-nginx:1.17.8"
    depends_on:
      - app
    networks:
      - safetynet
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 256M
networks:
  safetynet:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/28
